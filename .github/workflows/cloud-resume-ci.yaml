name: cloud-resume-ci

on:
 push:
  branches: [ main ]

jobs:
 
 build:
  
  runs-on: ubuntu-latest
  
  
  steps:
  
  - name: git-checkout
    uses: actions/checkout@v3

  - name: Setup Terraform
    env:
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    uses: hashicorp/setup-terraform@v2
    with:
      terraform_wrapper: false

  - name: Terraform Init
    env:
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    id: init
    run: terraform init
    working-directory: ./terraform

  - name: Terraform apply
    env:
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    id: apply
    run: terraform apply -auto-approve
    working-directory: ./terraform
  
  - name: Set EC2 public IP as env variable
    env:
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    run: |
     echo EC2_PUBLIC_IP=$(terraform output ec2_public_ip) >> $GITHUB_ENV 
     echo ${{ env.EC2_PUBLIC_IP }}
    working-directory: ./terraform

  - name: Build & push Docker image
    uses: mr-smithers-excellent/docker-build-push@v6
    with:
      image: tma1314/docker-hub-repo
      tags: v1, latest
      registry: docker.io
      username: ${{ secrets.DOCKER_USERNAME }}
      password: ${{ secrets.DOCKER_PASSWORD }}

  - name: wait for server
    run: sleep 120


  - name: copy docker-compose via ssh key
    uses: nogsantos/scp-deploy@master
    with:
      src: ./docker-compose.yaml
      host: ${{ env.EC2_PUBLIC_IP }}
      remote: /home/ubuntu/
      port: 22
      user: ubuntu
      key: ${{ secrets.KEY }}

  - name: copy docker-compose via ssh key
    uses: nogsantos/scp-deploy@master
    with:
      src: ./script-cmnds.sh
      host: ${{ env.EC2_PUBLIC_IP }}
      remote: /home/ubuntu/
      port: 22
      user: ubuntu
      key: ${{ secrets.KEY }}

  - name: Deploy Docker Image to EC2
    env:
     IMAGE_TAG: ${{ github.sha }}
    uses: appleboy/ssh-action@master
    with:
      host: ${{ env.EC2_PUBLIC_IP }}
      username: ubuntu
      key: ${{ secrets.KEY }}
      script: |
       sudo chmod +x script-cmnds.sh
       ./script-cmnds.sh tma1314/docker-hub-repo $IMAGE_TAG ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_PASSWORD }}

