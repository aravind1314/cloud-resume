name: cloud-resume-ci

on:
 push:
  branches: [ main ]

jobs:
 
 build:
  
  runs-on: ubuntu-latest
  
  
  steps:
  
  - name: git-checkout
    uses: actions/checkout@v3

  - name: Setup Terraform
    env:
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    uses: hashicorp/setup-terraform@v2
    with:
      terraform_wrapper: false

  - name: Terraform Init
    env:
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    id: init
    run: terraform init
    working-directory: ./terraform

  - name: Terraform apply
    env:
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    id: apply
    run: terraform apply -auto-approve
    working-directory: ./terraform

  - name: Set ip
    env:
     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    id: set-ip
    run: |-
      echo "::set-output name=instance_public_eip::$(terraform output eip_public_ip)"
    working-directory: ./terraform

  - run: echo SERVER_PUBLIC_EIP=${{ steps.set-ip.outputs.instance_public_eip }} >> $GITHUB_ENV

  - name: Build & push Docker image
    uses: mr-smithers-excellent/docker-build-push@v6
    with:
      image: tma1314/docker-hub-repo
      tags: v1, latest
      registry: docker.io
      username: ${{ secrets.DOCKER_USERNAME }}
      password: ${{ secrets.DOCKER_PASSWORD }}

  - name: Check if file exists
    id: check_file_exists
    uses: appleboy/ssh-action@master
    with:
      host: ${{ env.SERVER_PUBLIC_EIP }}
      username: ubuntu
      key: ${{ secrets.KEY }}
    run: |
      if [[ -f docker-compose.yaml ]]; then
        echo "::set-output name=file_exists::true"
      else
        echo "::set-output name=file_exists::false"
      fi

  - name: Remove existing files in ec2
    uses: appleboy/ssh-action@master
    if: ${{ steps.check_file_exists.outputs.file_exists == 'true' }}
    with:
      host: ${{ env.SERVER_PUBLIC_EIP }}
      username: ubuntu
      key: ${{ secrets.KEY }}
      script: |
       sudo docker-compose -f docker-compose.yaml down
       sudo rm docker-compose.yaml
       sudo rm script-cmnds.sh
       sudo docker rm -vf $(docker ps -a -q)
       sudo docker rmi -f $(docker images -a -q)


  - name: copy docker-compose via ssh key
    uses: appleboy/scp-action@master
    with:
      host: ${{ env.SERVER_PUBLIC_EIP }}
      username: ubuntu
      key: ${{ secrets.KEY }}
      source: "docker-compose.yaml"
      target: "/home/ubuntu"

  - name: copy script-cmnds via ssh key
    uses: appleboy/scp-action@master
    with:
      host: ${{ env.SERVER_PUBLIC_EIP }}
      username: ubuntu
      key: ${{ secrets.KEY }}
      source: "script-cmnds.sh"
      target: "/home/ubuntu"

  - name: Deploy Docker Image to EC2
    env:
     IMAGE_TAG: ${{ github.sha }}
    uses: appleboy/ssh-action@master
    with:
      host: ${{ env.SERVER_PUBLIC_EIP }}
      username: ubuntu
      key: ${{ secrets.KEY }}
      script: |
       sudo chmod +x script-cmnds.sh

       echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

       sudo bash script-cmnds.sh

